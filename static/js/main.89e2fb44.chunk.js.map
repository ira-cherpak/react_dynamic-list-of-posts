{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","PostsList","posts","onPostSelected","selectedPostId","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","addComment","useState","name","setName","email","setEmail","commentText","setCommentText","error","setError","creatComment","trim","onSubmit","event","preventDefault","placeholder","value","onChange","target","getPostComments","postId","addPostComment","body","method","JSON","stringify","PostDetails","postDetails","setPostDetails","comments","setComments","commentsVisibility","setcommentsVisibility","useEffect","getPostDetails","deleteComment","commentId","deletePostComment","length","comment","App","setPosts","setUserId","setSelectedPostId","getUserPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89e2fb44.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const post = (url, data) => fetch(`${BASE_URL}${url}`, {\n  method: 'POST',\n  body: JSON.stringify(data),\n})\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, onPostSelected, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => onPostSelected(post.id)}\n          >\n            {selectedPostId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  onPostSelected: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [error, setError] = useState(false);\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setCommentText('');\n    setError(false);\n  };\n\n  const creatComment = () => {\n    if (name.trim() && email.trim() && commentText.trim()) {\n      addComment(name, email, commentText);\n      resetForm();\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        creatComment();\n      }}\n    >\n      {error && (\n        <p className=\"NewCommentForm__error\">Fill out the filds </p>\n      )}\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentText}\n          onChange={event => setCommentText(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","import { request, post, BASE_URL } from './api';\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nexport const addPostComment = ({\n  postId,\n  name,\n  email,\n  body,\n}) => post('/comments', {\n  postId,\n  name,\n  email,\n  body,\n});\n\nexport const deletePostComment = postId => fetch(\n  `${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  },\n)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, addPostComment,\n  deletePostComment } from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentsVisibility, setcommentsVisibility] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(setPostDetails);\n    getPostComments(postId)\n      .then(setComments);\n  }, [postId]);\n\n  const addComment = ({ name, email, body }) => {\n    addPostComment({\n      postId, name, email, body,\n    })\n      .then(() => getPostComments(postId))\n      .then(setComments);\n  };\n\n  const deleteComment = (commentId) => {\n    deletePostComment(commentId)\n      .then(() => getPostComments(postId))\n      .then(setComments);\n  };\n\n  if (!postDetails) {\n    return <p>Select the post</p>;\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {postDetails.title}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setcommentsVisibility(!commentsVisibility);\n          }}\n        >\n          {commentsVisibility\n            ? `Hide comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {commentsVisibility && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nexport const getAllPosts = () => request(`/posts`);\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAllPosts, getUserPosts } from './api/posts';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nexport const App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    if (!userId) {\n      getAllPosts()\n        .then(setPosts);\n    } else {\n      getUserPosts(userId)\n        .then(setPosts);\n    }\n  }, [userId]);\n\n  const onPostSelected = (postId) => {\n    if (selectedPostId === postId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            onPostSelected={onPostSelected}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails postId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}